# -*- coding: utf-8 -*-
"""Case 7_User_Retention_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kqUSCXoouciUxBarZiRiqEheFmRVpL8I

# Import packages
"""

import pandas as pd
import numpy as np
import datetime as dt

from google.colab import drive
drive.mount('/content/drive')

# import os
# os.getcwd()

"""# Import data dari CSV ke DataFrame"""

df = pd.read_csv('/content/drive/MyDrive/MySkill/Project: User Retention Analysis/Salinan Online Retail Data.csv', header=0)
df

df.info()

"""# Data cleansing"""

df_clean = df.copy()
# mengkonversi kolom order_date menjadi datetime
df_clean['order_date'] = df_clean['order_date'].astype('datetime64')
# membuat kolom year_month
df_clean['year_month'] = df_clean['order_date'].dt.to_period('M')

# menghapus semua baris tanpa customer_id
df_clean = df_clean[~df_clean['customer_id'].isna()]
# menghapus semua baris tanpa product_name
df_clean = df_clean[~df_clean['product_name'].isna()]
# membuat semua product_name berhuruf kecil
df_clean['product_name'] = df_clean['product_name'].str.lower()

# menghapus semua baris dengan product_code atau product_name test
df_clean = df_clean[(~df_clean['product_code'].str.lower().str.contains('test')) |
                    (~df_clean['product_name'].str.contains('test '))]
# membuat kolom order_status dengan nilai 'cancelled' jika order_id diawali dengan huruf 'c' dan 'delivered' jika order_id tanpa awalan huruf 'c'
df_clean['order_status'] = np.where(df_clean['order_id'].str[:1]=='C', 'cancelled', 'delivered')
# mengubah nilai quantity yang negatif menjadi positif karena nilai negatif tersebut hanya menandakan order tersebut cancelled
df_clean['quantity'] = df_clean['quantity'].abs()

# menghapus baris dengan price bernilai negatif
df_clean = df_clean[df_clean['price']>0]
# membuat nilai amount, yaitu perkalian antara quantity dan price
df_clean['amount'] = df_clean['quantity'] * df_clean['price']

# mengganti product_name dari product_code yang memiliki beberapa product_name dengan salah satu product_name-nya yang paling sering muncul
most_freq_product_name = df_clean.groupby(['product_code','product_name'], as_index=False).agg(order_cnt=('order_id','nunique')).sort_values(['product_code','order_cnt'], ascending=[True,False])
most_freq_product_name['rank'] = most_freq_product_name.groupby('product_code')['order_cnt'].rank(method='first', ascending=False)
most_freq_product_name = most_freq_product_name[most_freq_product_name['rank']==1].drop(columns=['order_cnt','rank'])
df_clean = df_clean.merge(most_freq_product_name.rename(columns={'product_name':'most_freq_product_name'}), how='left', on='product_code')
df_clean['product_name'] = df_clean['most_freq_product_name']
df_clean = df_clean.drop(columns='most_freq_product_name')

# mengkonversi customer_id menjadi string
df_clean['customer_id'] = df_clean['customer_id'].astype(str)

# menghapus outlier
from scipy import stats
df_clean = df_clean[(np.abs(stats.zscore(df_clean[['quantity','amount']]))<3).all(axis=1)]
df_clean = df_clean.reset_index(drop=True)
df_clean

df_clean.info()

"""# Membuat user retention cohort

## Agregat data transaksi ke bentuk summary total transaksi/order setiap pengguna setiap bulan
"""

df_user_monthly = df_clean.groupby(['customer_id','year_month'], as_index=False).agg(order_cnt=('order_id','nunique'))
df_user_monthly

"""## Buat kolom sebagai cohort dari pengguna, misal cohort bulan pertama kali bertransaksi"""

# bulan pertama kali pengguna bertransaksi
df_user_monthly['cohort'] = df_user_monthly.groupby('customer_id')['year_month'].transform('min')
df_user_monthly

"""## Hitung jarak bulan antara bulan transaksi dengan bulan pertama kali transaksi dan jumlahkan dengan 1 agar jarak bulan 0 menjadi 1 yang berarti bulan pertama, dst."""

from operator import attrgetter

df_user_monthly['period_num'] = (df_user_monthly['year_month'] - df_user_monthly['cohort']).apply(attrgetter('n')) + 1
df_user_monthly

"""## Tabel pivot dengan index berupa cohort, kolom berupa jarak bulan, dan nilainya adalah banyaknya pengguna unik (count unique dari ID pengguna)"""

df_cohort_pivot = pd.pivot_table(df_user_monthly, index='cohort', columns='period_num', values='customer_id', aggfunc=pd.Series.nunique)
df_cohort_pivot

"""## Hitung banyaknya pengguna di masing-masing cohort (pengguna yang pertama kali transaksi di bulan tersebut) dan bagi semua nilai di tabel pivot tadi dengan nilai tersebut sebagai retention rate"""

cohort_size = df_cohort_pivot.iloc[:, 0]
cohort_size

df_retention_cohort = df_cohort_pivot.divide(cohort_size, axis=0)
df_retention_cohort

"""## Tampilkan tabel pivot yang sudah berisi nilai retention rate tersebut dalam heatmap"""

# pip install matplotlib
# pip install seaborn
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import seaborn as sns

# background warna putih
with sns.axes_style('white'):

    fig, ax = plt.subplots(1, 2, figsize=(12, 8), sharey=True, gridspec_kw={'width_ratios':[1, 11]})

    # user retention cohort
    # fmt untuk format penulisan tidak memiliki angka di belakang koma
    sns.heatmap(df_retention_cohort, annot=True, fmt='.0%', cmap='RdYlGn', ax=ax[1])
    ax[1].set_title('User Retention Cohort')
    ax[1].set(xlabel='Month Number', ylabel='')

    # cohort size
    # besar transaksi bulan pertama (100%)
    df_cohort_size = pd.DataFrame(cohort_size)
    white_cmap = mcolors.ListedColormap(['white'])
    sns.heatmap(df_cohort_size, annot=True, cbar=False, fmt='g', cmap=white_cmap, ax=ax[0])
    ax[0].tick_params(bottom=False)
    ax[0].set(xlabel='Cohort Size', ylabel='First Order Month', xticklabels=[])

    fig.tight_layout()

"""Dari analisis cohort di atas, dapat dikatakan bahwa pengguna paling banyak pertama kali bertransaksi pada bulan Januari 2010 sebanyak 713 orang. 
Kemudian, pada pengguna yang pertama kali bertransaksi pada bulan Januari juga merupakan pengguna yang paling banyak bertransaksi di bulan-bulan berikutnya dengan rata-rata mencapai 40% retention rate. 
Namun, hal yang harus diperhatikan adalah jumlah pengguna yang bertransaksi pertama kali setelah bulan Januari mengalami pengurangan dan menyebabkan pengurangan juga pada retention rate pada bulan-bulan berikutnya. 
Dimana terlihat retention rate selain pada bulan Januari hanya berkisar kurang dari 40% saja. 
Yang cukup mengkhawatirkan, retention rate pada bulan Desember menjadi yang terendah dibandingkan dengan retention rate lainnya."""
